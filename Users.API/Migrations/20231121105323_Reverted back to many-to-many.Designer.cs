// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Users.API.Data;

#nullable disable

namespace Users.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231121105323_Reverted back to many-to-many")]
    partial class Revertedbacktomanytomany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Users.API.Models.Domain.Skillset", b =>
                {
                    b.Property<Guid>("SkillsetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SkillsetId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SkillsetId");

                    b.HasIndex("SkillsetId1");

                    b.HasIndex("UserId");

                    b.ToTable("Skillset");
                });

            modelBuilder.Entity("Users.API.Models.Domain.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hobby")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isVisible")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Users.API.Models.Domain.Skillset", b =>
                {
                    b.HasOne("Users.API.Models.Domain.Skillset", null)
                        .WithMany("SkillSet")
                        .HasForeignKey("SkillsetId1");

                    b.HasOne("Users.API.Models.Domain.User", null)
                        .WithMany("Skillset")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Users.API.Models.Domain.Skillset", b =>
                {
                    b.Navigation("SkillSet");
                });

            modelBuilder.Entity("Users.API.Models.Domain.User", b =>
                {
                    b.Navigation("Skillset");
                });
#pragma warning restore 612, 618
        }
    }
}
